import discord
from discord.ext import commands
from discord import app_commands
from utils.permissions import check_admin
from utils.storage import JsonStorage
from utils.logger import Logger
from utils.minecraft_utils import MinecraftServerUtils
import os
from datetime import datetime, timedelta

class Minecraft(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.storage = JsonStorage('data/minecraft.json')
        self.logger = Logger('minecraft')
        # Initialize Minecraft server utils with server address from environment
        server_address = os.getenv('MINECRAFT_SERVER', 'localhost:25565')
        self.mc_utils = MinecraftServerUtils(server_address)

    @app_commands.command(
        name='mcstatus',
        description='–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Minecraft —Å–µ—Ä–≤–µ—Ä–∞'
    )
    async def server_status(self, interaction: discord.Interaction):
        """Show Minecraft server status"""
        status = await self.mc_utils.get_server_status()

        if status['online']:
            embed = discord.Embed(
                title="üü¢ Minecraft –°–µ—Ä–≤–µ—Ä –û–Ω–ª–∞–π–Ω",
                color=discord.Color.green()
            )
            embed.add_field(
                name="–ò–≥—Ä–æ–∫–∏",
                value=f"{status['players_online']}/{status['players_max']}",
                inline=True
            )
            embed.add_field(
                name="–í–µ—Ä—Å–∏—è",
                value=status['version'],
                inline=True
            )
            embed.add_field(
                name="–ü–∏–Ω–≥",
                value=f"{round(status['latency'])}–º—Å",
                inline=True
            )

            # Get online players
            players = await self.mc_utils.get_players()
            if players:
                embed.add_field(
                    name="–°–µ–π—á–∞—Å –∏–≥—Ä–∞—é—Ç",
                    value="\n".join(players),
                    inline=False
                )
        else:
            embed = discord.Embed(
                title="üî¥ Minecraft –°–µ—Ä–≤–µ—Ä –û—Ñ—Ñ–ª–∞–π–Ω",
                description=f"–û—à–∏–±–∫–∞: {status.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}",
                color=discord.Color.red()
            )

        await interaction.response.send_message(embed=embed)

    @app_commands.command(
        name='linkmc',
        description='–ü—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à Discord –∞–∫–∫–∞—É–Ω—Ç –∫ Minecraft'
    )
    @app_commands.describe(
        minecraft_username='–í–∞—à –Ω–∏–∫ –≤ Minecraft'
    )
    async def link_minecraft(self, interaction: discord.Interaction, minecraft_username: str):
        """Link Discord account to Minecraft username"""
        user_id = str(interaction.user.id)

        # Verify if player exists on server
        is_valid = await self.mc_utils.is_player_online(minecraft_username)
        if not is_valid:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏",
                description="–ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –Ω–∏–∫–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –æ–Ω–ª–∞–π–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return

        self.storage.set_minecraft_link(user_id, minecraft_username)

        embed = discord.Embed(
            title="‚úÖ Minecraft –ê–∫–∫–∞—É–Ω—Ç –ü—Ä–∏–≤—è–∑–∞–Ω",
            description=f"–í–∞—à Discord –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫: {minecraft_username}",
            color=discord.Color.green()
        )
        await interaction.response.send_message(embed=embed)
        self.logger.log(f"User {user_id} linked Minecraft account: {minecraft_username}")

    @app_commands.command(
        name='unlinkmc',
        description='–û—Ç–≤—è–∑–∞—Ç—å –≤–∞—à Minecraft –∞–∫–∫–∞—É–Ω—Ç'
    )
    async def unlink_minecraft(self, interaction: discord.Interaction):
        """Unlink Minecraft account"""
        user_id = str(interaction.user.id)
        self.storage.remove_minecraft_link(user_id)

        embed = discord.Embed(
            title="Minecraft –ê–∫–∫–∞—É–Ω—Ç –û—Ç–≤—è–∑–∞–Ω",
            description="–í–∞—à Minecraft –∞–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω",
            color=discord.Color.yellow()
        )
        await interaction.response.send_message(embed=embed)
        self.logger.log(f"User {user_id} unlinked Minecraft account")

    @app_commands.command(
        name='mcreward',
        description='–ü–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –∏–≥—Ä—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ'
    )
    async def minecraft_reward(self, interaction: discord.Interaction):
        """Get reward for playing on the server"""
        user_id = str(interaction.user.id)
        minecraft_username = self.storage.get_minecraft_username(user_id)

        if not minecraft_username:
            await interaction.response.send_message(
                "‚ùå –°–Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ –≤–∞—à Minecraft –∞–∫–∫–∞—É–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É—è /linkmc",
                ephemeral=True
            )
            return

        # Check if player is online
        is_online = await self.mc_utils.is_player_online(minecraft_username)
        if not is_online:
            await interaction.response.send_message(
                "‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–Ω–ª–∞–π–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã",
                ephemeral=True
            )
            return

        try:
            amount = self.storage.give_minecraft_reward(user_id)
            embed = discord.Embed(
                title="üí∞ –ù–∞–≥—Ä–∞–¥–∞ –ü–æ–ª—É—á–µ–Ω–∞",
                description=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ {amount} –º–æ–Ω–µ—Ç –∑–∞ –∏–≥—Ä—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!",
                color=discord.Color.green()
            )
            await interaction.response.send_message(embed=embed)
        except ValueError as e:
            await interaction.response.send_message(str(e), ephemeral=True)

async def setup(bot):
    await bot.add_cog(Minecraft(bot))
    print("Minecraft cog setup complete")